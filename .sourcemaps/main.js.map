{"version":3,"sources":["../../src/providers/mqtt/mqtt.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../net (ignored)","../../tls (ignored)","../../src/providers/database/database.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { DatabaseProvider } from '../database/database';\nimport { AlertController } from 'ionic-angular';\nimport * as mqtt from 'mqtt';\n\n@Injectable()\nexport class MqttProvider {\n  connectionType: string;\n  url: string;\n  port: string;\n  brokerUrl: string;\n  client: mqtt.Client;\n  isConnected: boolean;\n  rootTopic: string;\n\n  constructor(public http: Http, public db: DatabaseProvider, public alert: AlertController) {\n    console.log('Hello MqttProvider Provider');\n\n    this.connectionType = 'ws';\n    this.url = 'safe.local'; // safe.local, iot.eclipse.org\n    this.port = '1884';          // 1884, 80/ws\n\n    this.brokerUrl = this.connectionType + '://' + this.url + ':' + this.port;\n    this.isConnected = false;\n    this.rootTopic = 'community/';\n\n    this.connect(this.brokerUrl);\n\n    this.client.on('connect', () => {\n      this.onConnect();\n    });\n    this.client.on('message', (topic, message) => {\n      this.onMessage(topic, message.toString());\n    });\n  }\n\n  connect(brokerUrl: string) {\n    this.client = mqtt.connect(brokerUrl);\n  }\n\n  disconnect() {\n    this.client.end();\n    this.isConnected = this.client.connected;\n  }\n\n  onConnect() {\n    this.client.subscribe(this.rootTopic + '#');\n    this.isConnected = this.client.connected;\n    this.db.changeMqttState(true);\n  }\n\n  onMessage(topic: string, payload: string) {\n    if(topic === 'community/mobile/' + this.db.user.name + '/' + this.db.user.mobile + '/trigger/'){\n      if(payload === 'true'){\n        this.db.changeTriggerState(true);\n      }else{\n        this.db.changeTriggerState(false);\n      }\n    }\n  }\n\n  publish(topic: string, payload: string) {\n    this.client.publish(this.rootTopic + topic, payload, {qos: 0, retain: true, dup: false});\n  }\n\n  trigger(){\n    this.publish('mobile/' + this.db.user.name + '/' + this.db.user.mobile + '/trigger/', 'true');\n    this.location();\n    this.alert.create({\n      title: 'Device Triggered!',\n      subTitle: 'Please wait for further assistance.',\n      buttons: ['OK']\n    }).present();\n  }\n\n  location(){\n    this.publish('community/mobile/' + this.db.user.name + '/' + this.db.user.mobile + '/location/',  this.db.user.lat + '/' + this.db.user.long);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/mqtt/mqtt.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 154;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 154\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 197;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 197\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Subscription } from 'rxjs';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { MqttProvider } from '../../providers/mqtt/mqtt'\nimport { AlertController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  connection: string;\n  connectionColor: string;\n  buttonColor: string;\n  buttonDisabled: boolean;\n  mqttStateSubscription: Subscription;\n  triggerStateSubscription: Subscription;\n  isMqttConnected: boolean;\n  isTriggerd: boolean;\n\n  constructor(public navCtrl: NavController, public db: DatabaseProvider, public mqtt: MqttProvider, public alert: AlertController) {\n    this.mqttStateSubscription = db.mqttState.subscribe(mqttState => {\n      if(mqttState){\n        this.connection = 'Connected';\n        this.connectionColor = 'secondary';\n        this.isMqttConnected = true;\n      }else{\n        this.connection = 'Not Connected';\n        this.connectionColor = 'danger';\n        this.isMqttConnected = false;\n      }\n    });\n    this.triggerStateSubscription = db.triggerState.subscribe(triggerState => {\n      if(triggerState){\n        this.buttonColor = 'secondary';\n        this.buttonDisabled = true;\n        this.isTriggerd = true;\n      }else{\n        this.buttonColor = 'danger';\n        this.buttonDisabled = false;\n        this.isTriggerd = false;\n      }\n    });\n    \n\n    db.changeMqttState(false);\n    db.changeTriggerState(false);\n  }\n\n  ngOnDestroy(){\n    this.mqttStateSubscription.unsubscribe();\n    this.triggerStateSubscription.unsubscribe();\n  }\n\n  trigger(){\n    if(this.isMqttConnected){\n      this.mqtt.trigger();\n    }else{\n      this.alert.create({\n        title: 'Error!',\n        subTitle: 'Device is not connected. Please try again.',\n        buttons: ['OK']\n      }).present();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { DatabaseProvider } from '../providers/database/database';\nimport { MqttProvider } from '../providers/mqtt/mqtt';\n\ndeclare var window;\n\nexport class MyErrorHandler implements ErrorHandler {\n  handleError(err: any): void {\n    window.Ionic.handleNewError(err);\n  }\n}\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    { provide: ErrorHandler, useClass: MyErrorHandler },\n    DatabaseProvider,\n    MqttProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { DatabaseProvider } from '../providers/database/database';\nimport { MqttProvider } from '../providers/mqtt/mqtt';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, db: DatabaseProvider, mqtt: MqttProvider) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// net (ignored)\n// module id = 619\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// tls (ignored)\n// module id = 620\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class DatabaseProvider {\n  mqttState: Observable<boolean>;\n  mqttStateObserver: Observer<boolean>;\n  triggerState: Observable<boolean>;\n  triggerStateObserver: Observer<boolean>;\n\n  user = {\n    name: 'Jerome Joseph Bais',\n    mobile: '09279574701',\n    lat: 14.561160,\n    long: 120.590756\n  }\n\n  constructor(public http: Http) {\n    console.log('Hello DatabaseProvider Provider');\n\n    this.mqttState = new Observable<boolean>(observer => \n      this.mqttStateObserver = observer\n    ).share();\n    this.triggerState = new Observable<boolean>(observer =>\n      this.triggerStateObserver = observer\n    ).share();\n  }\n\n  changeMqttState(state: boolean){\n    if (this.mqttStateObserver !== undefined) this.mqttStateObserver.next(state);\n  }\n\n  changeTriggerState(state: boolean){\n    if (this.triggerStateObserver !== undefined) this.triggerStateObserver.next(state);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts"],"sourceRoot":""}